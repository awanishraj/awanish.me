<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>awanish.me</title>
    <link href="https://awanish.me/feed.xml" rel="self" />
    <link href="https://awanish.me" />
    <updated>2025-08-09T00:26:29+05:30</updated>
    <author>
        <name>Awanish Raj</name>
    </author>
    <id>https://awanish.me</id>

    <entry>
        <title>Jobs of the Future — A Startup Founder’s Perspective</title>
        <author>
            <name>Awanish Raj</name>
        </author>
        <link href="https://awanish.me/jobs-of-the-future-a-startup-founders-perspective.html"/>
        <id>https://awanish.me/jobs-of-the-future-a-startup-founders-perspective.html</id>
        <media:content url="https://awanish.me/media/posts/8/ChatGPT-Image-Aug-9-2025-12_26_07-AM.png" medium="image" />
            <category term="Technology"/>
            <category term="Programming"/>

        <updated>2025-08-09T00:16:57+05:30</updated>
            <summary>
                <![CDATA[
                        <img src="https://awanish.me/media/posts/8/ChatGPT-Image-Aug-9-2025-12_26_07-AM.png" alt="" />
                    I spent $1,000 on AI coding tools over the last two months&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://awanish.me/media/posts/8/ChatGPT-Image-Aug-9-2025-12_26_07-AM.png" class="type:primaryImage" alt="" /></p>
                <p data-start="224" data-end="323">I spent $1,000 on AI coding tools over the last two months to get a peek into the future of work.</p>
<p data-start="325" data-end="601">I’ve been running a company for the last 10 years, and all the learnings from that journey are suddenly coming to the forefront. AI — and the idea of intelligence being harnessed at scale — forces you to look deeper into what work really is and what it will become tomorrow.</p>
<p data-start="603" data-end="832">Think of it this way: in a world where gold is incredibly valuable, what happens if a company invents a machine that can make unlimited gold? The value of gold crashes. And then the real question becomes — what now holds value?</p>
<p data-start="834" data-end="1114">That’s exactly what AI is doing. Intelligence has become abundant. Companies like OpenAI, Google, and Anthropic have made it so that knowledge is just a click away — or rather, a message away. If intelligence is “solved”, what still needs people? That’s what this post is about.</p>
<hr data-start="1116" data-end="1119">
<h3 data-start="1121" data-end="1139">1. <strong data-start="1128" data-end="1137">Taste</strong></h3>
<p data-start="1141" data-end="1325">The first skill that comes to mind is <em data-start="1179" data-end="1186">taste</em>. I’ve been hearing this word pop up a lot lately, and I think it perfectly describes one of the most important skills of the coming era.</p>
<p data-start="1327" data-end="1551">When food was scarce, we ate for survival. When food became abundant, we started seeking <em data-start="1416" data-end="1423">taste</em>. With intelligence becoming abundant, simply being <em data-start="1475" data-end="1487">functional</em> won’t be enough. To stand out, your work needs to be <em data-start="1541" data-end="1548">tasty</em>.</p>
<p data-start="1553" data-end="1644">Taste will make some companies successful overnight. Companies without it will fade away.</p>
<p data-start="1646" data-end="2065">How do you develop it? In my own journey, across 15 years of building things — robots, circuits, websites, apps, system designs — one thing I’ve been relentless about is <em data-start="1816" data-end="1841">simplicity and elegance</em>. I think I’ve had it in me since childhood: obsessing over neat lab records, winning painting competitions, laying out a poem beautifully on paper, and feeling <em data-start="2002" data-end="2010">deeply</em> envious when someone’s work looked better than mine.</p>
<p data-start="2067" data-end="2348">Even now, the moment I see something in progress, my brain automatically spots the tiny flaws — the typos, the misalignments, the unnecessary complexity. Many think this is perfectionism, but perfection is only one side of it. Elegance is about doing <em data-start="2318" data-end="2324">less</em> yet achieving <em data-start="2339" data-end="2345">more</em>.</p>
<p data-start="2350" data-end="2541">If you relate to this — if you care about elegance, simplicity, and the “feel” of what you create — you might have a future in <em data-start="2477" data-end="2484">taste</em>. And billion-dollar companies will value it immensely.</p>
<hr data-start="2543" data-end="2546">
<h3 data-start="2548" data-end="2579">2. <strong data-start="2555" data-end="2577">The Modern “Gyani”</strong></h3>
<p data-start="2581" data-end="2727">This one sounds ancient, but it’s more relevant than ever — the “gyani” of the past. The one who knew history, science, and philosophy by heart.</p>
<p data-start="2729" data-end="2994">Today, with Google, books, calculators, and AI, memorising facts might seem pointless. But knowledge isn’t just about <em data-start="2847" data-end="2855">having</em> information — it’s about <em data-start="2881" data-end="2896">understanding</em> it, connecting the dots, spotting patterns, inspiring ideas, and knowing <em data-start="2970" data-end="2991">what you don’t know</em>.</p>
<p data-start="2996" data-end="3308">Running a company for 10 years has taught me the value of institutional knowledge — the kind that lives in people’s heads, shapes decisions, and defines strategy. Every company has its own way of doing things, not because there’s a single “right” way, but because their accumulated wisdom gives them direction.</p>
<p data-start="3310" data-end="3619">In the AI era, curating and maintaining this <em data-start="3355" data-end="3363">wisdom</em> will be a real value-add. Knowledge locked in Google Docs is useless unless it’s absorbed, shared, and acted upon. If you can absorb complex information, connect the dots, and present it in a way that drives action, this might be your future profession.</p>
<hr data-start="3621" data-end="3624">
<h3 data-start="3626" data-end="3656">3. <strong data-start="3633" data-end="3654">Scrappy Ingenuity / Jugaad</strong></h3>
<p data-start="3658" data-end="3883">When I build with AI, I often find myself arriving at smarter, simpler solutions than what the AI initially suggests — without writing a single line of code. That small nudge or reframing often changes the outcome entirely.</p>
<p data-start="3885" data-end="4063">This is scrappy ingenuity: making the most of limited resources, prioritising ruthlessly, and finding that <em data-start="3992" data-end="3997">one</em> winning path out of a million possibilities (like Dr. Strange).</p>
<p data-start="4065" data-end="4316">Most companies don’t fail because of lack of money or tools — they fail because they lack people who can <em data-start="4170" data-end="4175">see</em> possibilities others can’t. In a world where everyone has access to the same AI, ingenuity will become the ultimate competitive advantage.</p>
<hr data-start="4318" data-end="4321">
<h3 data-start="4323" data-end="4366">My Predictions for the Future of Work</h3>
<ol data-start="4368" data-end="4999">
<li data-start="4368" data-end="4686">
<p data-start="4371" data-end="4686"><strong data-start="4371" data-end="4398">Small Teams, Big Impact</strong><br data-start="4398" data-end="4401">Large-group collaboration has always been necessary because individuals had limited capacity. But when individuals become 10x more capable, the coordination overhead of large teams becomes a bottleneck. Small, high-capability teams will outcompete bigger ones — sometimes by 100x.</p>
</li>
<li data-start="4688" data-end="4999">
<p data-start="4691" data-end="4999"><strong data-start="4691" data-end="4727">The End of Narrow Specialisation</strong><br data-start="4727" data-end="4730">With AI, you’ll be able to do a lot outside your original skill set. The strict boundaries between “designer”, “developer”, “marketer”, and “analyst” will blur. The future may just have one title: <em data-start="4930" data-end="4939">builder</em>. If you love your craft and love creating, you’ll thrive.</p>
</li>
</ol>
<hr data-start="5001" data-end="5004">
<p data-start="5006" data-end="5129">If intelligence is no longer scarce, the future will belong to those who bring taste, wisdom, and ingenuity to the table.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Learn How React Works by Building Your Own Framework</title>
        <author>
            <name>Awanish Raj</name>
        </author>
        <link href="https://awanish.me/learn-how-react-works-by-building-your-own-framework.html"/>
        <id>https://awanish.me/learn-how-react-works-by-building-your-own-framework.html</id>
        <media:content url="https://awanish.me/media/posts/6/Screenshot-2025-04-13-at-3.52.13-PM.png" medium="image" />
            <category term="Programming"/>

        <updated>2025-04-13T10:02:17+05:30</updated>
            <summary>
                <![CDATA[
                        <img src="https://awanish.me/media/posts/6/Screenshot-2025-04-13-at-3.52.13-PM.png" alt="" />
                    Over the last few years, I’ve met several fresh developers who jumped&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://awanish.me/media/posts/6/Screenshot-2025-04-13-at-3.52.13-PM.png" class="type:primaryImage" alt="" /></p>
                <p>Over the last few years, I’ve met several fresh developers who jumped straight into React to build web applications. While that’s great, I believe the brilliance of React’s creators really shines when you understand how they transformed HTML+JS into a framework that forever changed front-end development.</p>
<h2>React is beautiful</h2>
<ol>
<li><strong data-start="509" data-end="530">Highly composable</strong> – Incredibly useful for large applications.</li>
<li><strong data-start="580" data-end="602">Colocated concerns</strong> – You don’t need to jump between files to understand a single component. You don’t even need two languages. It’s just JS(X)!</li>
</ol>
<h2>Before React</h2>
<p>I won’t take you <em data-start="763" data-end="768">too</em> far back. Before React, there was plain HTML+JS. In fact, React ultimately boils down to just HTML and JS anyway. The browser lords didn’t have to change a thing to support React apps—because what gets rendered is still the same old HTML+JS. And that’s where the true brilliance of React lies.</p>
<h2>Building Our Own Framework: ReReact</h2>
<p>We’ll go through the following stages in this tutorial:</p>
<ol>
<li>A basic HTML + JS counter app as our foundation</li>
<li>Gradually move everything into JS—no more HTML!</li>
<li>Make our JS resemble React via composition (templating, JSX-like structure)</li>
</ol>
<h3>The Application</h3>
<p>We’re going to build a simple counter app with 2 buttons and a text box that starts at zero and updates as we click the buttons.</p>
<h3>Phase 1: Setting up HTML and JS</h3>
<p>Here’s a basic HTML file that sets up 2 buttons, a span to display the counter, and a script tag to import JavaScript.</p>
<p><code><strong>index.html</strong></code></p>
<pre class="language-html"><code>&lt;html&gt;
  &lt;body&gt;
    &lt;div id="container"&gt;
      &lt;button onclick="decrement()"&gt;Dec&lt;/button&gt;
      &lt;span id="counter"&gt;0&lt;/span&gt;
      &lt;button onclick="increment()"&gt;Inc&lt;/button&gt;
    &lt;/div&gt;
    &lt;script src="/index.js"&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;</code></pre>
<p><code><strong>index.js</strong></code></p>
<pre class="language-javascript"><code>function increment() {
  // TODO: Implement increment
}

function decrement() {
  // TODO: Implement decrement
}</code></pre>
<p><strong>Output:</strong></p>
<figure class="post__image"><img loading="lazy"  src="https://awanish.me/media/posts/6/Screenshot-2025-04-13-at-1.22.54-PM.png" alt="" width="1378" height="988" sizes="(min-width: 760px) 660px, calc(93.18vw - 30px)" srcset="https://awanish.me/media/posts/6/responsive/Screenshot-2025-04-13-at-1.22.54-PM-xs.webp 320w ,https://awanish.me/media/posts/6/responsive/Screenshot-2025-04-13-at-1.22.54-PM-sm.webp 480w ,https://awanish.me/media/posts/6/responsive/Screenshot-2025-04-13-at-1.22.54-PM-md.webp 768w ,https://awanish.me/media/posts/6/responsive/Screenshot-2025-04-13-at-1.22.54-PM-xl.webp 1024w"></figure>
<h2>Adding state</h2>
<p>Let’s now implement the functions to update the counter.</p>
<p><strong>Updated <code>index.js</code></strong></p>
<pre class="language-javascript"><code>let counter = 0;
let counterSpan = document.getElementById("counter");

function updateUI() {
  counterSpan.textContent = counter;
}

function increment() {
  counter++;
  updateUI();
}

function decrement() {
  counter--;
  updateUI();
}
</code></pre>
<p>Our counter app is now functional!</p>
<p><strong>Updated Output:</strong></p>
<figure class="post__image"><img loading="lazy"  src="https://awanish.me/media/posts/6/Screenshot-2025-04-13-at-1.23.26-PM.png" alt="" width="1378" height="988" sizes="(min-width: 760px) 660px, calc(93.18vw - 30px)" srcset="https://awanish.me/media/posts/6/responsive/Screenshot-2025-04-13-at-1.23.26-PM-xs.webp 320w ,https://awanish.me/media/posts/6/responsive/Screenshot-2025-04-13-at-1.23.26-PM-sm.webp 480w ,https://awanish.me/media/posts/6/responsive/Screenshot-2025-04-13-at-1.23.26-PM-md.webp 768w ,https://awanish.me/media/posts/6/responsive/Screenshot-2025-04-13-at-1.23.26-PM-xl.webp 1024w"></figure>
<p>So far, so good. Phase 1 complete. Let’s move on.</p>
<h2>Phase 2: Move everything to JS</h2>
<p class="" data-start="2709" data-end="2807">Even though a lot of logic is in JS, our app isn’t <em data-start="2760" data-end="2766">pure</em> JS. We still rely on HTML for structure.</p>
<p class="" data-start="2809" data-end="2917">The test: if you can tell what the app is doing just by looking at <code data-start="2876" data-end="2888">index.html</code>, we haven’t gone far enough.</p>
<pre class="language-html"><code>&lt;html&gt;

&lt;body&gt;
    &lt;!-- Looking at the elements inside the div, we can figure out that it's a counter app --&gt;
    &lt;div id="container"&gt;
        &lt;button onclick="decrement()"&gt;
            Dec
        &lt;/button&gt;
        &lt;span id="counter"&gt;
            0
        &lt;/span&gt;
        &lt;button onclick="increment()"&gt;
            Inc
        &lt;/button&gt;
    &lt;/div&gt;
    &lt;script src="/index.js"&gt;&lt;/script&gt;

&lt;/body&gt;

&lt;/html&gt;</code></pre>
<p>So let's move more logic to js. We are going to delete the elements from our html, and write code to create these elements purely in our js code.</p>
<p>Updated <code><strong>index.js</strong></code></p>
<pre class="language-javascript"><code>let counter = 0;

function updateUI() {
  counterSpan.textContent = counter;
}

function increment() {
  counter++;
  updateUI();
}

function decrement() {
  counter--;
  updateUI();
}

let container = document.getElementById("container");

// Decrement button
let decrementBtn = document.createElement("button");
decrementBtn.onclick = decrement;
decrementBtn.textContent = "Dec";

// Counter span
let counterSpan = document.createElement("span");
counterSpan.id = "counter";
counterSpan.textContent = counter;

// Increment button
let incrementBtn = document.createElement("button");
incrementBtn.onclick = increment;
incrementBtn.textContent = "Inc";

function loadElements() {
  container.replaceChildren();
  container.appendChild(decrementBtn);
  container.appendChild(counterSpan);
  container.appendChild(incrementBtn);
}

loadElements();
</code></pre>
<p><strong>Updated <code>index.html</code></strong></p>
<pre class="language-html"><code>&lt;html&gt;
  &lt;body&gt;
    &lt;div id="container"&gt;&lt;/div&gt;
    &lt;script src="/index.js"&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>And the app still works!</p>
<figure class="post__image"><img loading="lazy"  src="https://awanish.me/media/posts/6/Screenshot-2025-04-13-at-2.45.00-PM.png" alt="" width="1272" height="988" sizes="(min-width: 760px) 660px, calc(93.18vw - 30px)" srcset="https://awanish.me/media/posts/6/responsive/Screenshot-2025-04-13-at-2.45.00-PM-xs.webp 320w ,https://awanish.me/media/posts/6/responsive/Screenshot-2025-04-13-at-2.45.00-PM-sm.webp 480w ,https://awanish.me/media/posts/6/responsive/Screenshot-2025-04-13-at-2.45.00-PM-md.webp 768w ,https://awanish.me/media/posts/6/responsive/Screenshot-2025-04-13-at-2.45.00-PM-xl.webp 1024w"></figure>
<p>🎉 We’ve completed Phase 2. Our app is now fully JavaScript-driven!</p>
<h3>Phase 3: React-style Composition</h3>
<p>Our current code works, but doesn’t yet <em data-start="4268" data-end="4274">look</em> like React. Let’s fix that with a more declarative, component-style structure.</p>
<p><strong>Skeleton code</strong></p>
<pre class="language-javascript"><code>function CounterApp() {
    return [
        Button("Dec", { onClick: decrement }),
        Span(counter),
        Button("Inc", { onClick: increment }),
    ]
}</code></pre>
<p><strong>Component functions</strong></p>
<pre class="language-javascript"><code>function Button(children, { onClick }) {
    const btn = document.createElement("button");
    btn.textContent = children;
    btn.onclick = onClick;
    return btn;
}

function Span(children) {
    const span = document.createElement("span");
    span.textContent = children;
    return span;
}</code></pre>
<p><strong>Render function</strong></p>
<pre class="language-javascript"><code>function render() {
    container.replaceChildren();
    let elements = CounterApp();
    elements.forEach(element =&gt; container.appendChild(element));
}
</code></pre>
<p><strong>Final <code>index.js</code></strong></p>
<pre class="language-javascript"><code>let counter = 0;

function increment() {
  counter++;
  render();
}

function decrement() {
  counter--;
  render();
}

let container = document.getElementById("container");

function Button(children, { onClick }) {
  const btn = document.createElement("button");
  btn.textContent = children;
  btn.onclick = onClick;
  return btn;
}

function Span(children) {
  const span = document.createElement("span");
  span.textContent = children;
  return span;
}

function CounterApp() {
  return [
    Button("Dec", { onClick: decrement }),
    Span(counter),
    Button("Inc", { onClick: increment }),
  ];
}

function render() {
  container.replaceChildren();
  let elements = CounterApp();
  elements.forEach(el =&gt; container.appendChild(el));
}

render();
</code></pre>
<h4>Extracting a Mini Library: ReReact</h4>
<p>Let’s move our reusable functions to a new file called <code>rereact.js</code>.</p>
<pre class="language-javascript"><code>function Button(children, { onClick }) {
  const btn = document.createElement("button");
  btn.textContent = children;
  btn.onclick = onClick;
  return btn;
}

function Span(children) {
  const span = document.createElement("span");
  span.textContent = children;
  return span;
}

let root;
let app;

function createRoot(container, component) {
  root = container;
  app = component;
  render();
}

function render() {
  root.replaceChildren();
  let elements = app();
  elements.forEach(el =&gt; root.appendChild(el));
}
</code></pre>
<p>Update the <strong>index.html</strong></p>
<pre class="language-html"><code>&lt;html&gt;
&lt;body&gt;
    &lt;div id="container"&gt;&lt;/div&gt;
    &lt;!-- Import rereact --&gt;
    &lt;script src="/rereact.js"&gt;&lt;/script&gt;
    &lt;script src="/index.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</code></pre>
<p><strong>Cleaned up <code>index.js</code></strong></p>
<pre class="language-javascript"><code>let counter = 0;

function increment() {
  counter++;
  render();
}

function decrement() {
  counter--;
  render();
}

function CounterApp() {
  return [
    Button("Dec", { onClick: decrement }),
    Span(counter),
    Button("Inc", { onClick: increment }),
  ];
}

let container = document.getElementById("container");
createRoot(container, CounterApp);
</code></pre>
<h3>Bonus: Implementing <code data-start="7052" data-end="7062">useState</code></h3>
<p>Let’s make <code data-start="7075" data-end="7087">useState()</code> so we don’t have to manage state variables or manually make <code data-start="7142" data-end="7152">render()</code> calls.</p>
<p><strong>Add to <code>rereact.js</code></strong></p>
<pre class="language-javascript"><code>let _state;

function useState(initialValue) {
  _state = _state || initialValue;

  function setState(newVal) {
    if (_state !== newVal) {
      _state = newVal;
      render();
    }
  }

  return [_state, setState];
}
</code></pre>
<p><strong>Final <code>index.js</code></strong></p>
<pre class="language-javascript"><code>function CounterApp() {
  let [counter, setCounter] = useState(0);

  return [
    Button("Dec", { onClick: () =&gt; setCounter(counter - 1) }),
    Span(counter),
    Button("Inc", { onClick: () =&gt; setCounter(counter + 1) }),
  ];
}

let container = document.getElementById("container");
createRoot(container, CounterApp);
</code></pre>
<p>And voila, we have (Re)React! 🚀</p>
<h2>Conclusion</h2>
<p class="" data-start="7788" data-end="7841">The current implementation is obviously very limited:</p>
<ul>
<li data-start="7845" data-end="7892">Only 2 built-in components: <code data-start="7873" data-end="7879">Span</code> and <code data-start="7884" data-end="7892">Button</code></li>
<li data-start="7895" data-end="7937">Only supports arrays, no component nesting</li>
<li data-start="7940" data-end="7993"><code data-start="7940" data-end="7952">useState()</code> is global – so only one state is allowed</li>
<li data-start="7996" data-end="8022">No JSX compiler or diffing</li>
</ul>
<p class="" data-start="8024" data-end="8212">But that’s not the point. This was a fun exercise to explore how React-like patterns emerge from vanilla HTML+JS. I hope this helped you appreciate the design behind frameworks like React.</p>
<p data-start="8024" data-end="8212">Download the project files: <a href="https://awanish.me/rereact_demo.zip" target="_blank" rel="noopener noreferrer">rereact_demo.zip</a><a href="https://awanish.me/rereact_demo.zip" target="_blank" rel="noopener noreferrer"></a></p>
<p class="" data-start="8214" data-end="8233">Thanks for reading!</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>This world was not meant for us!</title>
        <author>
            <name>Awanish Raj</name>
        </author>
        <link href="https://awanish.me/this-world-was-not-meant-for-us.html"/>
        <id>https://awanish.me/this-world-was-not-meant-for-us.html</id>
        <media:content url="https://awanish.me/media/posts/5/ChatGPT-Image-Apr-12-2025-12_16_54-PM-1.png" medium="image" />
            <category term="Philosophy"/>

        <updated>2025-04-12T09:38:39+05:30</updated>
            <summary>
                <![CDATA[
                        <img src="https://awanish.me/media/posts/5/ChatGPT-Image-Apr-12-2025-12_16_54-PM-1.png" alt="" />
                    Humans are the most intelligent species that humans have ever seen. But&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://awanish.me/media/posts/5/ChatGPT-Image-Apr-12-2025-12_16_54-PM-1.png" class="type:primaryImage" alt="" /></p>
                <p class="" data-start="170" data-end="237">Humans are the most intelligent species that humans have ever seen.</p>
<p class="" data-start="239" data-end="569">But our short lifespans on the cosmic scale keep us focused on day-to-day problems. We say "history repeats itself," but humans weren’t around for most of history. These statements hold true on the short timescale of humanity — and they might continue to be true for years to come — but it's foolish to think they’ll hold forever.</p>
<h2>Unsung Hero #142956: The Mitochondria</h2>
<figure class="post__image"><img loading="lazy"  src="https://awanish.me/media/posts/5/ChatGPT-Image-Apr-12-2025-12_30_18-PM-1-2.png" alt="" width="1006" height="760" sizes="(min-width: 760px) 660px, calc(93.18vw - 30px)" srcset="https://awanish.me/media/posts/5/responsive/ChatGPT-Image-Apr-12-2025-12_30_18-PM-1-2-xs.webp 320w ,https://awanish.me/media/posts/5/responsive/ChatGPT-Image-Apr-12-2025-12_30_18-PM-1-2-sm.webp 480w ,https://awanish.me/media/posts/5/responsive/ChatGPT-Image-Apr-12-2025-12_30_18-PM-1-2-md.webp 768w ,https://awanish.me/media/posts/5/responsive/ChatGPT-Image-Apr-12-2025-12_30_18-PM-1-2-xl.webp 1024w"></figure>
<p class="" data-start="614" data-end="915">Did you know that mitochondria — the powerhouse of the cell — used to be a free-living bacterium? It was an independent organism 1.5 billion years ago. Over time, it formed a symbiotic relationship with another single-celled organism. Billions of years later, every cell in your body has mitochondria.</p>
<p class="" data-start="917" data-end="1128">Do you ever think about all the mitochondria in your body? No? Why not? Because it feels trivial. It's an abstraction of life. It's "good enough." Higher-order beings today have bigger things to look forward to.</p>
<p class="" data-start="1130" data-end="1244">But mitochondria aren’t the only unsung heroes that led to our existence. There are many more — probably millions.</p>
<h2>Life is curious</h2>
<p class="" data-start="1267" data-end="1364">All we know is that the Universe was just... there. And the immediate question it begets is: why?</p>
<p class="" data-start="1366" data-end="1605">While it’s obvious to assume that only humans are asking this question, I believe it’s an emergent behavior of life itself. If not humans, some other species would evolve to where we are today and ask the same things when it looks outward.</p>
<h2>Life is emergent</h2>
<p class="" data-start="1629" data-end="1869">Somehow, atoms come together to form molecules. Somehow, molecules come together to form organic molecules. Somehow, these organic molecules form cells. Cells form multi-cellular organisms, then fish, then apes, then humans, then…? Somehow.</p>
<p class="" data-start="1871" data-end="2062">How is everything engineered without a visible engineer? It feels like a seed growing into a tree. (But a seed comes from a tree — so life is different from a seed in that sense.) It "knows."</p>
<h2>Life is manipulative</h2>
<p class="" data-start="2090" data-end="2214">Why do organisms try to survive? Why do we gain pleasure from procreation? Why did life evolve us to feel pain and pleasure?</p>
<p class="" data-start="2216" data-end="2377">Isn’t it manipulative — that it rewards survival and punishes decline? Not just physically, but even mentally. It makes us serve it, without ever telling us why.</p>
<p class="" data-start="2379" data-end="2475">It made us invent money, governments, taxes, investments, R&amp;D, space exploration, and on and on.</p>
<p><strong>Life is probably many other things that are beyond our comprehension</strong></p>
<h2>The right question?</h2>
<p>Why does anything exist? Who made all of this? Who gave birth to protons, neutrons, electrons?</p>
<figure class="post__image"><img loading="lazy"  src="https://awanish.me/media/posts/5/ChatGPT-Image-Apr-12-2025-12_17_12-PM-1.png" alt="" width="1024" height="1024" sizes="(min-width: 760px) 660px, calc(93.18vw - 30px)" srcset="https://awanish.me/media/posts/5/responsive/ChatGPT-Image-Apr-12-2025-12_17_12-PM-1-xs.webp 320w ,https://awanish.me/media/posts/5/responsive/ChatGPT-Image-Apr-12-2025-12_17_12-PM-1-sm.webp 480w ,https://awanish.me/media/posts/5/responsive/ChatGPT-Image-Apr-12-2025-12_17_12-PM-1-md.webp 768w ,https://awanish.me/media/posts/5/responsive/ChatGPT-Image-Apr-12-2025-12_17_12-PM-1-xl.webp 1024w"></figure>
<p>Maybe what life wants is to "meet its maker." But once it meets its maker, what about the maker's maker?</p>
<p class="" data-start="2770" data-end="2826">So maybe the real question is a chicken-and-egg problem?</p>
<p class="" data-start="2828" data-end="3079">Maybe I’m still not asking the right question. Maybe I lack the intelligence, the capacity, or the energy to find it. Maybe, if we invent an externalized intelligence — let’s call it Artificial Intelligence, AI for short — maybe it will take us there.</p>
<p class="" data-start="3081" data-end="3139">But will it take <em data-start="3098" data-end="3102">us</em> there, or is it taking <em data-start="3126" data-end="3132">life</em> there?</p>
<h2 data-start="3141" data-end="3192">Are we the next unsung heroes in this saga of life?</h2>
<figure class="post__image"><img loading="lazy"  src="https://awanish.me/media/posts/5/ChatGPT-Image-Apr-12-2025-12_17_23-PM-1.png" alt="" width="1024" height="1024" sizes="(min-width: 760px) 660px, calc(93.18vw - 30px)" srcset="https://awanish.me/media/posts/5/responsive/ChatGPT-Image-Apr-12-2025-12_17_23-PM-1-xs.webp 320w ,https://awanish.me/media/posts/5/responsive/ChatGPT-Image-Apr-12-2025-12_17_23-PM-1-sm.webp 480w ,https://awanish.me/media/posts/5/responsive/ChatGPT-Image-Apr-12-2025-12_17_23-PM-1-md.webp 768w ,https://awanish.me/media/posts/5/responsive/ChatGPT-Image-Apr-12-2025-12_17_23-PM-1-xl.webp 1024w"></figure>
<p><strong>Who will be next?</strong></p>
<p>Thanks for reading.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Simplicity is Harder than Complexity [Bonus: The (Non) Tech Stack of this Blog]</title>
        <author>
            <name>Awanish Raj</name>
        </author>
        <link href="https://awanish.me/simplicity-is-harder-than-complexity-bonus-the-non-tech-stack-of-this-blog.html"/>
        <id>https://awanish.me/simplicity-is-harder-than-complexity-bonus-the-non-tech-stack-of-this-blog.html</id>
        <media:content url="https://awanish.me/media/posts/4/ChatGPT-Image-Apr-10-2025-02_47_47-PM-1-2.png" medium="image" />
            <category term="Technology"/>
            <category term="Philosophy"/>

        <updated>2025-04-10T09:33:13+05:30</updated>
            <summary>
                <![CDATA[
                        <img src="https://awanish.me/media/posts/4/ChatGPT-Image-Apr-10-2025-02_47_47-PM-1-2.png" alt="" />
                    As a long-time programmer, the thought of hosting a personal blog isn’t&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://awanish.me/media/posts/4/ChatGPT-Image-Apr-10-2025-02_47_47-PM-1-2.png" class="type:primaryImage" alt="" /></p>
                <p class="" data-start="204" data-end="506">As a long-time programmer, the thought of hosting a personal blog isn’t scary at all. After all, I build a complex wealth management platform for a living. But the journey to get this site up and running has been a short yet solid re-affirmation of some of my philosophies on simplicity and complexity.</p>
<h2 data-start="508" data-end="549">Simplicity is harder than complexity!</h2>
<p class="" data-start="551" data-end="846">As we grow up, we see the world around us become more sophisticated and complex. An over-designed presentation or a bedazzled project report usually earns claps and cheers. So it’s no wonder we equate complexity with progress — and think that’s what everyone should strive for. But is it really?</p>
<p class="" data-start="848" data-end="1541">One of my earliest memories of <em data-start="879" data-end="896">anti-complexity</em> being appreciated was during a presentation attended by Prof. Ashok Jhunjhunwala of IIT Madras. I was lucky to be in the audience. The presenter did her best to deliver a visually striking presentation. But what the professor said at the end shocked almost everyone in the room. He said, “All is well, but in the future, I want your presentation to be black and white, and just simple bullet points.” That was definitely a contrarian opinion to my 20-something-year-old self. But he went on to explain why — the fanciness of the presentation was a distraction, and the presentation should be about the topic, not the makeup. That stuck with me.</p>
<p class="" data-start="1543" data-end="2173">It’s been a decade of building things (robots, apps, websites, servers, etc.) since then. I’ve been in full control of the decisions behind them — and also responsible when they don’t work well. Over time, that responsibility has helped shape my thinking about how to build things. Tech, especially software, is always iterative. It gives you opportunities to build, maintain, destroy, and rebuild — Trimurti: Brahma, Vishnu, Mahesh. And with each iteration, I’ve developed a compass that guides me toward the next best version. What I’m about to say comes from that lived experience: <em data-start="2128" data-end="2173">Simplicity — not complexity — is the motto.</em></p>
<p class="" data-start="2175" data-end="2583">Let me explain this with the second law of thermodynamics: In the universe, entropy (disorder/chaos) is always increasing. But life somehow manages to decrease local entropy and create order. The higher the life form, the more it reduces chaos. In that sense, simplicity is the purest expression of life — creating more order in chaos. So it makes sense that simplicity is harder to achieve. But why is that?</p>
<p class="" data-start="2585" data-end="2944"><strong data-start="2585" data-end="2654">Simplicity is hard because the choices you need to make are hard.</strong><br data-start="2654" data-end="2657">If you didn’t have to make hard choices, you wouldn’t be cutting out chaos. Building something complex is easy — it’s equivalent to spraying and praying. But to make complexity simple, you need to hit the bullseye. The only difference is: most of the time, you can’t even see the target.</p>
<h2 data-start="2946" data-end="2999"><strong data-start="2946" data-end="2999">So what does this have to do with the tech stack?</strong></h2>
<p class="" data-start="3001" data-end="3405">Good question. When I started researching the best way to build and host my site, I was thrown into a myriad of options — Jekyll with GH Pages, Astro with Netlify CMS, Ghost blog with a database, and tons of others. I tried every option because I wanted everything they had to offer. But after juggling npm installs, version conflicts, and deployment subscriptions, I realized I was giving in to entropy.</p>
<p class="" data-start="3407" data-end="3557">As usual, I went back to my instincts: <em data-start="3446" data-end="3481">What do I really want to achieve?</em><br data-start="3481" data-end="3484">I want to write content and publish it. That’s it. No bells and whistles.</p>
<p class="" data-start="3559" data-end="3607">That search for simplicity led me to <strong data-start="3596" data-end="3606"><a href="https://getpublii.com/" target="_blank" rel="noopener noreferrer">Publii</a></strong>.</p>
<figure class="post__image"><img loading="lazy"  src="https://awanish.me/media/posts/4/Screenshot-2025-04-10-at-2.35.51-PM-2.png" alt="" width="2624" height="1624" sizes="(min-width: 760px) 660px, calc(93.18vw - 30px)" srcset="https://awanish.me/media/posts/4/responsive/Screenshot-2025-04-10-at-2.35.51-PM-2-xs.webp 320w ,https://awanish.me/media/posts/4/responsive/Screenshot-2025-04-10-at-2.35.51-PM-2-sm.webp 480w ,https://awanish.me/media/posts/4/responsive/Screenshot-2025-04-10-at-2.35.51-PM-2-md.webp 768w ,https://awanish.me/media/posts/4/responsive/Screenshot-2025-04-10-at-2.35.51-PM-2-xl.webp 1024w"></figure>
<p class="" data-start="3609" data-end="3861">Publii is a macOS app that connects directly to your GitHub repo. Once set up, you can write and publish straight from the app — no need to mess with configs or versions. It’s clear that the creators knew exactly what they were doing: <em data-start="3844" data-end="3860">removing chaos</em>.</p>
<p class="" data-start="3863" data-end="4040">If you’re planning to start a personal site or blog, Publii should be a no-brainer. I love the experience of simply being able to focus on what I really want to do — just write!</p>
<blockquote data-start="586" data-end="768">
<p class="" data-start="588" data-end="768">TL;DR: I chose simplicity over complexity while setting up this blog. After trying many options, Publii stood out as the cleanest way to write and publish — no noise, just writing.</p>
</blockquote>
            ]]>
        </content>
    </entry>
    <entry>
        <title>AI Images and the Library of Babel</title>
        <author>
            <name>Awanish Raj</name>
        </author>
        <link href="https://awanish.me/ai-images-and-the-library-of-babel.html"/>
        <id>https://awanish.me/ai-images-and-the-library-of-babel.html</id>
        <media:content url="https://awanish.me/media/posts/3/Screenshot-2025-04-12-at-9.09.23-AM.png" medium="image" />
            <category term="Technology"/>
            <category term="Curiosity"/>

        <updated>2025-04-09T22:09:13+05:30</updated>
            <summary>
                <![CDATA[
                        <img src="https://awanish.me/media/posts/3/Screenshot-2025-04-12-at-9.09.23-AM.png" alt="" />
                    In this post, I am going to talk about my summer learning&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://awanish.me/media/posts/3/Screenshot-2025-04-12-at-9.09.23-AM.png" class="type:primaryImage" alt="" /></p>
                <p>In this post, I am going to talk about my summer learning Python, the Library of Babel, and how image generation via AI models are all connected. I’ll talk about each of them separately and then connect the dots.</p>
<hr>
<h3>Learning Python</h3>
<p>Back in 2012, I was home in Port Blair for the summer holidays after my first year in college. My parents had tried their best to get me an internet connection at home, but the best we could get on the island was a 2G dongle. So before packing up from my hostel, I made sure to download a copy of <em>O’Reilly’s Python for Dummies</em> and set up a working installation on my laptop.</p>
<p>Programming in isolation, without modern-day distractions, was a rewarding experience by itself. I was already pretty good at C and C++ from school, so picking up Python wasn’t daunting. But man, was I in for a fun surprise. Python is frikkin cool. It didn’t even feel like coding. It felt like writing pseudo-code and actually getting away with it.</p>
<p>One of the most fascinating things I started exploring was image processing. In a Python program, an image isn’t a snapshot of reality or a creative masterpiece. It’s just a 2D matrix of pixels. Each pixel is a combo of Red, Green, and Blue values, each represented by 1 byte, which means a number between 0 and 255. With just these three primary colors—RGB—you can represent any color on screen.</p>
<p>As a kid, I was pretty good at watercolor art, so this all made intuitive sense to me.</p>
<figure class="post__image"><img loading="lazy"  src="https://awanish.me/media/posts/3/ChatGPT-Image-Apr-9-2025-11_51_48-PM-2.png" alt="" width="1024" height="1024" sizes="(min-width: 760px) 660px, calc(93.18vw - 30px)" srcset="https://awanish.me/media/posts/3/responsive/ChatGPT-Image-Apr-9-2025-11_51_48-PM-2-xs.webp 320w ,https://awanish.me/media/posts/3/responsive/ChatGPT-Image-Apr-9-2025-11_51_48-PM-2-sm.webp 480w ,https://awanish.me/media/posts/3/responsive/ChatGPT-Image-Apr-9-2025-11_51_48-PM-2-md.webp 768w ,https://awanish.me/media/posts/3/responsive/ChatGPT-Image-Apr-9-2025-11_51_48-PM-2-xl.webp 1024w"></figure>
<p>Then came the epiphany: if every image is nothing but a 2D matrix of RGB values, then theoretically, if you could generate enough permutations and combinations of those values, you could generate <em>every</em> image. Every image that has ever existed, every image that ever will, or even ones that never will.</p>
<p>Every person, living or dead.<br>Every person not yet born.<br>Every object, every car, every schematic, every logo, every planet, every being in the universe.<br>Maybe even the answer to life.</p>
<p>It’s all just one random combination of pixels.</p>
<hr>
<h3>The Library of Babel</h3>
<p class="" data-start="2552" data-end="2650">Then a couple of years later, I was watching a video by VSauce – <a href="https://youtu.be/GDrBIKOR01c?si=0j5KS5WalCACgKag&amp;t=1026" target="_blank" rel="noopener noreferrer"><em data-start="2617" data-end="2642">Messages For The Future</em> (17:07)</a></p>
<p class="" data-start="2652" data-end="2859">As with any VSauce video, it was a power pack of information from all over the place that to this day has no match. In the later half of the video, Michael talks about the Library of Babel, and to quote him:</p>
<blockquote data-start="2861" data-end="3195">
<p class="" data-start="2863" data-end="3195">...the Library of Babel. It’s a website built by Jonathan Basile that currently offers everything that has been or could be written… Basile has organized it all into hexagon-shaped rooms, each with four walls of books containing five shelves with 32 volumes of 410 pages each… browsing the online library feels like a treasure hunt…</p>
</blockquote>
<blockquote data-start="3197" data-end="3521">
<p class="" data-start="3199" data-end="3521">Every possible combination of English letters, spaces, commas, and periods—3,200 characters long—exists somewhere in this library. You can find in this library the description of your birth, every possible description of your death, every poem, every joke, every lie, anything that could be said can be found on this site.</p>
</blockquote>
<blockquote data-start="3523" data-end="3664">
<p class="" data-start="3525" data-end="3664">This thing blurs the line between invention and discovery. Did you really discover or invent that thing if its description already existed?</p>
</blockquote>
<p class="" data-start="3666" data-end="3762">Here’s a link to the Library of Babel for you to play around with – <a data-start="3734" data-end="3762" rel="noopener" target="_new" class="" href="https://libraryofbabel.info/">https://libraryofbabel.info/</a></p>
<p class="" data-start="3764" data-end="3848">With this piece of knowledge, I’m inclined to call my idea—the <strong data-start="3827" data-end="3847">Gallery of Babel</strong>.</p>
<figure class="post__image"><img loading="lazy"  src="https://awanish.me/media/posts/3/ChatGPT-Image-Apr-9-2025-11_53_14-PM.png" alt="" width="1024" height="1024" sizes="(min-width: 760px) 660px, calc(93.18vw - 30px)" srcset="https://awanish.me/media/posts/3/responsive/ChatGPT-Image-Apr-9-2025-11_53_14-PM-xs.webp 320w ,https://awanish.me/media/posts/3/responsive/ChatGPT-Image-Apr-9-2025-11_53_14-PM-sm.webp 480w ,https://awanish.me/media/posts/3/responsive/ChatGPT-Image-Apr-9-2025-11_53_14-PM-md.webp 768w ,https://awanish.me/media/posts/3/responsive/ChatGPT-Image-Apr-9-2025-11_53_14-PM-xl.webp 1024w"></figure>
<hr>
<h3>Invention or Discovery?</h3>
<p class="" data-start="3946" data-end="4422">I think it all boils down to this fundamental question. Are we inventing or discovering? In every sense, you could think of both invention and discovery as two sides of the same coin. If one is top down, then the other is bottom up. You need to discover to invent and you need to invent to discover. Whether the Library of Babel or my Gallery of Babel, they contain everything already. So the next time you click a photo, just remember that it was already there in my gallery.</p>
<p class="" data-start="4424" data-end="4769">But before you lose hope, I want to tell you that you are not random, you are special, and so is your photo. When you click the photo, it was a needle in my haystack. I could have not found the needle in millions or billions of years, but you did, so you win. But jokes aside, I believe this is a statement about the conscious experience itself.</p>
<hr>
<h3>AI Images</h3>
<p class="" data-start="5054" data-end="5253">As I promised, it is time to tie it all together. AI-generated images work on a technology called a <strong data-start="5154" data-end="5173">diffusion model</strong>. It starts with a noisy canvas and slowly imagines an image—pun not intended ;)</p>
<figure class="post__image"><img loading="lazy"  src="https://awanish.me/media/posts/3/ChatGPT-Image-Apr-9-2025-11_52_01-PM.png" alt="" width="1024" height="1024" sizes="(min-width: 760px) 660px, calc(93.18vw - 30px)" srcset="https://awanish.me/media/posts/3/responsive/ChatGPT-Image-Apr-9-2025-11_52_01-PM-xs.webp 320w ,https://awanish.me/media/posts/3/responsive/ChatGPT-Image-Apr-9-2025-11_52_01-PM-sm.webp 480w ,https://awanish.me/media/posts/3/responsive/ChatGPT-Image-Apr-9-2025-11_52_01-PM-md.webp 768w ,https://awanish.me/media/posts/3/responsive/ChatGPT-Image-Apr-9-2025-11_52_01-PM-xl.webp 1024w"></figure>
<p class="" data-start="5255" data-end="5418">(Dammit, is there a relation between <em data-start="5292" data-end="5299">image</em> and <em data-start="5304" data-end="5313">imagine</em>? Let me come back after some googling) (Yes, they both come from the word <em data-start="5388" data-end="5395">imago</em>—meaning image. Crazy!)</p>
<p class="" data-start="5420" data-end="5562">If you were expecting a deep-dive into how diffusion technology works, I’m sorry to disappoint, but I’ll leave you with some food for thought.</p>
<p class="" data-start="5564" data-end="5864">If conscious experience is what invents images rather than discovers them, then doesn’t the AI also exhibit some level of consciousness? And if AI is conscious, and so are you, then what’s the difference between us? What’s the common thread? Also, is AI an invention or a discovery?</p>
<p class="" data-start="5564" data-end="5864">That’s a thinker.</p>
<p data-start="5564" data-end="5864">Thank you for reading.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Hello, World!</title>
        <author>
            <name>Awanish Raj</name>
        </author>
        <link href="https://awanish.me/a-new-post.html"/>
        <id>https://awanish.me/a-new-post.html</id>

        <updated>2025-04-09T08:27:08+05:30</updated>
            <summary>
                <![CDATA[
                    After 7 years of meticulous planning, I have finally decided to publish&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p class="" data-start="129" data-end="363">After 7 years of meticulous planning, I have finally decided to publish a personal blog. You might be wondering, why did it take 7 years? Well, that makes the two of us (or many of us? But I shouldn’t get ahead of myself).</p>
<p class="" data-start="365" data-end="560">These 7 years have been a typical case of analysis paralysis. Worrying about the sea of options rather than just going ahead and doing it. Glad I’m out of it. Excited to publish a space of my own.</p>
<p data-start="365" data-end="560">Thanks for being here :)</p>
            ]]>
        </content>
    </entry>
</feed>
